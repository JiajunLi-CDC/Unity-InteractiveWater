// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain


RWTexture2D<float4> NState;
RWTexture2D<float4> Nm1State;
RWTexture2D<float4> Np1State;
RWTexture2D<float4> ObstacleTex;
int2 resolution;
float3 effect;
float dispersion;


[numthreads(8,8,1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float ns_ij = NState[id.xy];
    float nm1s_ij = Nm1State[id.xy].x;
    float ns_ip1j = NState[id.xy + uint2(1, 0)].x;
    float ns_ijp1 = NState[id.xy + uint2(0, 1)].x;
    float ns_im1j = NState[id.xy + uint2(-1, 0)].x;
    float ns_ijm1 = NState[id.xy + uint2(0, -1)].x;
    float newWaveHeight = ns_ij * 2 - nm1s_ij + 0.25 * (ns_ip1j + ns_im1j + ns_ijm1 + ns_ijp1 - 4 * ns_ij);
    newWaveHeight *= dispersion;

    if (id.x == floor(effect.x) && id.y == floor(effect.y))
    {
        newWaveHeight = effect.z;
    }

    if (ObstacleTex[id.xy].x == 1)
    {
        newWaveHeight = 0;
    }

    if (ObstacleTex[id.xy].y == 1)
    {
        newWaveHeight = -0.5;
    }

    Np1State[id.xy] = float4(newWaveHeight, newWaveHeight, newWaveHeight, 1);
}
